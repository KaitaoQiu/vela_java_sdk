openapi: 3.0.0
info:
  title: Generated by cue.
  version: no version
servers:
- url: /
paths: {}
components:
  schemas:
    HealthProbe:
      properties:
        exec:
          $ref: '#/components/schemas/exec'
        failureThreshold:
          default: 3
          description: Number of consecutive failures required to determine the container
            is not alive (liveness probe) or not ready (readiness probe).
          title: failureThreshold
          type: integer
        httpGet:
          $ref: '#/components/schemas/httpGet'
        initialDelaySeconds:
          default: 0
          description: Number of seconds after the container is started before the
            first probe is initiated.
          title: initialDelaySeconds
          type: integer
        periodSeconds:
          default: 10
          description: "How often, in seconds, to execute the probe."
          title: periodSeconds
          type: integer
        successThreshold:
          default: 1
          description: Minimum consecutive successes for the probe to be considered
            successful after having failed.
          title: successThreshold
          type: integer
        tcpSocket:
          $ref: '#/components/schemas/tcpSocket'
        timeoutSeconds:
          default: 1
          description: Number of seconds after which the probe times out.
          title: timeoutSeconds
          type: integer
      required:
      - failureThreshold
      - initialDelaySeconds
      - periodSeconds
      - successThreshold
      - timeoutSeconds
      title: readinessProbe
      type: object
    sidecar-spec:
      properties:
        args:
          description: Specify the args in the sidecar
          items:
            title: args
            type: string
          title: args
          type: array
        cmd:
          description: Specify the commands run in the sidecar
          items:
            title: cmd
            type: string
          title: cmd
          type: array
        env:
          description: Specify the env in the sidecar
          items:
            $ref: '#/components/schemas/env'
          title: env
          type: array
        image:
          description: Specify the image of sidecar container
          title: image
          type: string
        livenessProbe:
          $ref: '#/components/schemas/HealthProbe'
        name:
          description: Specify the name of sidecar container
          title: name
          type: string
        readinessProbe:
          $ref: '#/components/schemas/HealthProbe'
        volumes:
          description: Specify the shared volume path
          items:
            $ref: '#/components/schemas/volumes'
          title: volumes
          type: array
      required:
      - image
      - name
      title: parameter
      type: object
    exec:
      description: Instructions for assessing container health by executing a command.
        Either this attribute or the httpGet attribute or the tcpSocket attribute
        MUST be specified. This attribute is mutually exclusive with both the httpGet
        attribute and the tcpSocket attribute.
      properties:
        command:
          description: "A command to be executed inside the container to assess its\
            \ health. Each space delimited token of the command is a separate array\
            \ element. Commands exiting 0 are considered to be successful probes,\
            \ whilst all other exit codes are considered failures."
          items:
            title: command
            type: string
          title: command
          type: array
      required:
      - command
      title: exec
      type: object
    httpHeaders:
      properties:
        name:
          title: name
          type: string
        value:
          title: value
          type: string
      required:
      - name
      - value
      title: httpHeaders
      type: object
    httpGet:
      description: Instructions for assessing container health by executing an HTTP
        GET request. Either this attribute or the exec attribute or the tcpSocket
        attribute MUST be specified. This attribute is mutually exclusive with both
        the exec attribute and the tcpSocket attribute.
      properties:
        httpHeaders:
          items:
            $ref: '#/components/schemas/httpHeaders'
          title: httpHeaders
          type: array
        path:
          description: "The endpoint, relative to the port, to which the HTTP GET\
            \ request should be directed."
          title: path
          type: string
        port:
          description: The TCP socket within the container to which the HTTP GET request
            should be directed.
          title: port
          type: integer
      required:
      - path
      - port
      title: httpGet
      type: object
    tcpSocket:
      description: Instructions for assessing container health by probing a TCP socket.
        Either this attribute or the exec attribute or the httpGet attribute MUST
        be specified. This attribute is mutually exclusive with both the exec attribute
        and the httpGet attribute.
      properties:
        port:
          description: The TCP socket within the container that should be probed to
            assess container health.
          title: port
          type: integer
      required:
      - port
      title: tcpSocket
      type: object
    configMapKeyRef:
      description: Selects a key of a config map in the pod's namespace
      properties:
        key:
          description: The key of the config map to select from. Must be a valid secret
            key
          title: key
          type: string
        name:
          description: The name of the config map in the pod's namespace to select
            from
          title: name
          type: string
      required:
      - key
      - name
      title: configMapKeyRef
      type: object
    fieldRef:
      description: Specify the field reference for env
      properties:
        fieldPath:
          description: Specify the field path for env
          title: fieldPath
          type: string
      required:
      - fieldPath
      title: fieldRef
      type: object
    secretKeyRef:
      description: Selects a key of a secret in the pod's namespace
      properties:
        key:
          description: The key of the secret to select from. Must be a valid secret
            key
          title: key
          type: string
        name:
          description: The name of the secret in the pod's namespace to select from
          title: name
          type: string
      required:
      - key
      - name
      title: secretKeyRef
      type: object
    valueFrom:
      description: Specifies a source the value of this var should come from
      properties:
        configMapKeyRef:
          $ref: '#/components/schemas/configMapKeyRef'
        fieldRef:
          $ref: '#/components/schemas/fieldRef'
        secretKeyRef:
          $ref: '#/components/schemas/secretKeyRef'
      title: valueFrom
      type: object
    env:
      properties:
        name:
          description: Environment variable name
          title: name
          type: string
        value:
          description: The value of the environment variable
          title: value
          type: string
        valueFrom:
          $ref: '#/components/schemas/valueFrom'
      required:
      - name
      title: env
      type: object
    volumes:
      properties:
        name:
          title: name
          type: string
        path:
          title: path
          type: string
      required:
      - name
      - path
      title: volumes
      type: object


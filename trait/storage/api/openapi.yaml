openapi: 3.0.0
info:
  title: Generated by cue.
  version: no version
servers:
- url: /
paths: {}
components:
  schemas:
    storage-spec:
      properties:
        configMap:
          description: Declare config map type storage
          items:
            $ref: '#/components/schemas/configMap'
          title: configMap
          type: array
        emptyDir:
          description: Declare empty dir type storage
          items:
            $ref: '#/components/schemas/emptyDir'
          title: emptyDir
          type: array
        hostPath:
          description: Declare host path type storage
          items:
            $ref: '#/components/schemas/hostPath'
          title: hostPath
          type: array
        pvc:
          description: Declare pvc type storage
          items:
            $ref: '#/components/schemas/pvc'
          title: pvc
          type: array
        secret:
          description: Declare secret type storage
          items:
            $ref: '#/components/schemas/secret'
          title: secret
          type: array
      title: parameter
      type: object
    items:
      properties:
        key:
          title: key
          type: string
        mode:
          default: 511
          title: mode
          type: integer
        path:
          title: path
          type: string
      required:
      - key
      - mode
      - path
      title: items
      type: object
    mountToEnv:
      properties:
        configMapKey:
          title: configMapKey
          type: string
        envName:
          title: envName
          type: string
      required:
      - configMapKey
      - envName
      title: mountToEnv
      type: object
    mountToEnvs:
      properties:
        configMapKey:
          title: configMapKey
          type: string
        envName:
          title: envName
          type: string
      required:
      - configMapKey
      - envName
      title: mountToEnvs
      type: object
    configMap:
      properties:
        data:
          title: data
          type: object
        defaultMode:
          default: 420
          title: defaultMode
          type: integer
        items:
          items:
            $ref: '#/components/schemas/items'
          title: items
          type: array
        mountOnly:
          default: false
          title: mountOnly
          type: boolean
        mountPath:
          title: mountPath
          type: string
        mountToEnv:
          $ref: '#/components/schemas/mountToEnv'
        mountToEnvs:
          items:
            $ref: '#/components/schemas/mountToEnvs'
          title: mountToEnvs
          type: array
        name:
          title: name
          type: string
        readOnly:
          default: false
          title: readOnly
          type: boolean
        subPath:
          title: subPath
          type: string
      required:
      - defaultMode
      - mountOnly
      - name
      - readOnly
      title: configMap
      type: object
    emptyDir:
      properties:
        medium:
          default: ""
          enum:
          - ""
          - Memory
          title: medium
          type: string
        mountPath:
          title: mountPath
          type: string
        name:
          title: name
          type: string
        subPath:
          title: subPath
          type: string
      required:
      - medium
      - mountPath
      - name
      title: emptyDir
      type: object
    hostPath:
      properties:
        mountPath:
          title: mountPath
          type: string
        name:
          title: name
          type: string
        path:
          title: path
          type: string
        type:
          default: Directory
          enum:
          - Directory
          - DirectoryOrCreate
          - FileOrCreate
          - File
          - Socket
          - CharDevice
          - BlockDevice
          title: type
          type: string
      required:
      - mountPath
      - name
      - path
      - type
      title: hostPath
      type: object
    dataSource:
      properties:
        apiGroup:
          title: apiGroup
          type: string
        kind:
          title: kind
          type: string
        name:
          title: name
          type: string
      required:
      - apiGroup
      - kind
      - name
      title: dataSource
      type: object
    dataSourceRef:
      properties:
        apiGroup:
          title: apiGroup
          type: string
        kind:
          title: kind
          type: string
        name:
          title: name
          type: string
      required:
      - apiGroup
      - kind
      - name
      title: dataSourceRef
      type: object
    limits:
      properties:
        storage:
          pattern: "^([1-9][0-9]{0,63})(E|P|T|G|M|K|Ei|Pi|Ti|Gi|Mi|Ki)$"
          title: storage
          type: string
      required:
      - storage
      title: limits
      type: object
    requests:
      properties:
        storage:
          pattern: "^([1-9][0-9]{0,63})(E|P|T|G|M|K|Ei|Pi|Ti|Gi|Mi|Ki)$"
          title: storage
          type: string
      required:
      - storage
      title: requests
      type: object
    resources:
      properties:
        limits:
          $ref: '#/components/schemas/limits'
        requests:
          $ref: '#/components/schemas/requests'
      required:
      - requests
      title: resources
      type: object
    matchExpressions:
      properties:
        key:
          title: key
          type: string
        operator:
          title: operator
          type: string
        values:
          items:
            title: values
            type: string
          title: values
          type: array
      required:
      - key
      - operator
      - values
      title: matchExpressions
      type: object
    selector:
      properties:
        matchExpressions:
          $ref: '#/components/schemas/matchExpressions'
        matchLabels:
          additionalProperties:
            type: string
          title: matchLabels
          type: object
      title: selector
      type: object
    pvc:
      properties:
        accessModes:
          default:
          - ReadWriteOnce
          items:
            title: accessModes
            type: string
          title: accessModes
          type: array
        dataSource:
          $ref: '#/components/schemas/dataSource'
        dataSourceRef:
          $ref: '#/components/schemas/dataSourceRef'
        mountOnly:
          default: false
          title: mountOnly
          type: boolean
        mountPath:
          title: mountPath
          type: string
        name:
          title: name
          type: string
        resources:
          $ref: '#/components/schemas/resources'
        selector:
          $ref: '#/components/schemas/selector'
        storageClassName:
          title: storageClassName
          type: string
        subPath:
          title: subPath
          type: string
        volumeMode:
          default: Filesystem
          title: volumeMode
          type: string
        volumeName:
          title: volumeName
          type: string
      required:
      - accessModes
      - mountOnly
      - mountPath
      - name
      - volumeMode
      title: pvc
      type: object
    mountToEnv_1:
      properties:
        envName:
          title: envName
          type: string
        secretKey:
          title: secretKey
          type: string
      required:
      - envName
      - secretKey
      title: mountToEnv
      type: object
    mountToEnvs_1:
      properties:
        envName:
          title: envName
          type: string
        secretKey:
          title: secretKey
          type: string
      required:
      - envName
      - secretKey
      title: mountToEnvs
      type: object
    secret:
      properties:
        data:
          title: data
          type: object
        defaultMode:
          default: 420
          title: defaultMode
          type: integer
        items:
          items:
            $ref: '#/components/schemas/items'
          title: items
          type: array
        mountOnly:
          default: false
          title: mountOnly
          type: boolean
        mountPath:
          title: mountPath
          type: string
        mountToEnv:
          $ref: '#/components/schemas/mountToEnv_1'
        mountToEnvs:
          items:
            $ref: '#/components/schemas/mountToEnvs_1'
          title: mountToEnvs
          type: array
        name:
          title: name
          type: string
        readOnly:
          default: false
          title: readOnly
          type: boolean
        stringData:
          title: stringData
          type: object
        subPath:
          title: subPath
          type: string
      required:
      - defaultMode
      - mountOnly
      - mountPath
      - name
      - readOnly
      title: secret
      type: object

